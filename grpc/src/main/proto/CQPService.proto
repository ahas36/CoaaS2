syntax = "proto3";

option java_multiple_files = true;
option java_generic_services = true;

package au.coaas.cqp.proto;

import "CoaaSBase.proto";

message ListOfContextEntities {
    repeated ContextEntity value = 1;
}

message CDQLQuery {

    map<string, au.coaas.base.proto.ListOfString> warnings = 1;

    map<string, au.coaas.base.proto.ListOfString> errors = 2;

    QueryType queryType = 3;

    map<string, string> nameSpaces = 4;

    CDQLSelect select = 5;

    CDQLWhen when = 6;

    CDQLRepeat repeat = 7;

    CDQLDefine define = 8;

    CDQLConfig config = 9;

    CDQLCallback callback = 10;

    CDQLMeta meta = 12;

    map<int32, au.coaas.base.proto.ListOfString> executionPlan = 11;
}

message SubscribedQuery {
    string id = 1;
    repeated CdqlConditionToken situation = 2;
    CDQLQuery query = 3;
    repeated ContextEntity relatedEntities = 4;
    string queryId = 5;
    double complexity = 6;
    CDQLCallback callback = 7;
    string token = 8;
    string criticality = 9;
}

enum CDQLType {
    UNKNOWN_CDQL_TYPE = 0;
    QUERY = 2;
    FUNCTION_DEF = 3;
}

enum QueryType {
    UNKNOWN_QUERY_TYPE = 0;
    PUSH_BASED = 1;
    PULL_BASED = 2;
}

message ContextAttribute {
    string entityName = 1;
    string attributeName = 2;
    string prefix = 3;
    bool isComplexAttribute = 4;
}

message ListOfContextAttribute {
    repeated ContextAttribute value = 1;
}

enum OperandType {
    UNKNOWN_OPERAND_TYPE = 0;
    CONTEXT_VALUE_STRING = 1;
    CONTEXT_VALUE_NUMBER = 2;
    CONTEXT_VALUE_JSON = 3;
    CONTEXT_ATTRIBUTE = 4;
    CONTEXT_ENTITY = 5;
    FUNCTION_CALL = 6;
}

message Operand {
    OperandType type = 1;

    ContextAttribute contextAttribute = 2;

    FunctionCall functioncall = 3;

    ContextEntity contextEntity = 5;

    string stringValue = 4;
}

message FunctionCall {
    string functionName = 1;

    repeated Operand arguments = 2;

    repeated string subItems = 3;
}

message FunctionHolder {
    FunctionCall function = 1;

    string operand = 2;

    string value = 3;
}

message CDQLSelect {
    map<string, ListOfContextAttribute> selectAttrs = 1;

    repeated FunctionCall selectFunctions = 2;

}

message CDQLWhen {
    bool isLifeTime = 1;

    Condition condition = 2;

    int64 time = 3;
}

message Condition {
    repeated string contextAttribiutes = 1;

    repeated CdqlConditionToken RPNCondition = 2;

    map<string, au.coaas.base.proto.ListOfString> dependency = 3;
}

enum CdqlConditionTokenType {
    UNKNOWN_CONDITION_TYPE = 0;
    Operator = 1;
    Constant = 2;
    Function = 3;
    Attribute = 4;
    Expression = 5;
    Entity = 6;
}

enum CdqlConstantConditionTokenType {
    UNKNOWN_CONSTANT_TYPE = 0;
    Numeric = 1;
    String = 2;
    Json = 3;
    Array = 4;
    Boolean = 5;
}


message CdqlConditionToken {
    string stringValue = 1;

    CdqlConditionTokenType type = 2;

    CdqlConstantConditionTokenType constantTokenType = 6;
    ContextAttribute contextAttribute = 3;
    ContextEntity contextEntity = 4;
    FunctionCall functionCall = 5;

}

message ContextEntityType {
    string type = 1;
    string vocabURI = 2;
}

message ContextEntity {
    ContextEntityType type = 1;
    string entityID = 2;
    Condition condition = 3;
    map<string,string> contextAttributes = 4;
}

enum TimeUnit {
    UNKNOWN_UNIT_TYPE = 0;
    NANO_SECOND = 1;
    MILLI_SECOND = 2;
    SECOND = 3;
    MINUTE = 4;
    HOUR = 5;
    DAY = 6;
    MONTH = 7;
    YEAR = 8;
}

message CDQLRepeat {
    double interval = 1;
    TimeUnit unit = 2;
}

message CDQLDefine {
    repeated ContextEntity definedEntities = 1;
}

enum OutputStructureType {
    UNKNOWN_OUTPUT_TYPE = 0;
    JSON = 1;
    ODF = 2;
    XML = 3;
}

message OutputConfig {
    OutputStructureType outputStructure = 1;
}

message CDQLConfig {
    OutputConfig outputConfig = 1;
}

message CDQLMeta {
    string body = 1;
    TimeWindow timeWindow = 2;
}

message TimeWindow{
    int64 start = 1;
    int64 end = 2;
}


enum CallBackMethod {
    UNKNOWN_METHOD_TYPE = 0;
    FCM = 1;
    HTTPPOST = 2;
}

message CDQLCallback {
    CallBackMethod callbackMethod = 1;

    string httpURL = 2;

    string fcmTopic = 3;

    string fcmID = 4;

    string body = 5;

    map<string, string> headers = 6;

    string AuthorizationType = 7;

    string userName = 8;

    string password = 9;
}

message ParseRequest {
    string cdql = 1;
    string queryId = 2;
}

enum ContextFunctionType {
    UNKNOWN_FUNCTION_TYPE = 0;
    AGGREGATION = 1;
    SITUATION = 2;
}

message ContextFunction {
    string package = 1;
    string functionTitle = 2;
    ContextFunctionType type = 3;
    SituationFunction sFunction = 4;
    AggregationFunction aFunction = 5;
}

message SituationFunctionResponse {
    SituationFunction sFunction = 1;
    string status = 2;
}

message SituationFunction {
    map<string, string> nameSpaces = 1;
    map<string, ContextEntityType> relatedEntities = 2;
    repeated SituationDescription situations = 3;
    repeated string allAttributes = 4;
}

message SituationDescription {
    string situationName = 1;
    repeated WeightedAttributeDescription attributes = 2;
}

message WeightedAttributeDescription {
    AttributeDescription attribute = 1;
    int32 weight = 2;
}

message AttributeDescription {
    string attributeName = 1;
    repeated RegionDescription regions = 2;
}

message RegionDescription {
    string regionValue = 1;
    double regionBelief = 2;
}

message AggregationFunction {
    string url = 1;
}

message CDQLConstruct {
    CDQLType type = 1;
    ContextFunction function = 2;
    CDQLQuery query = 3;
    string queryId = 4;
    double complexity = 5;
}


service CQPService {
    rpc parse (ParseRequest) returns (CDQLConstruct);
}
