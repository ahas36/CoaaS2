
syntax = "proto3";

option java_multiple_files = true;
option java_generic_services = true;

package au.coaas.sqem.proto;

import "CQPService.proto";


message SQEMResponse {
    
    string status = 1;
    string body = 2;
    string meta = 3;
}


message ContextRequest
{
    au.coaas.cqp.proto.ContextEntityType et = 1;
    repeated au.coaas.cqp.proto.ContextAttribute returnAttributes = 2;
    au.coaas.cqp.proto.Condition condition = 3;
    au.coaas.cqp.proto.CDQLMeta meta = 4;
    int32 page = 5;
    int32 limit = 6;
}

message RegisterEntityRequest
{
    string json = 1;
    au.coaas.cqp.proto.ContextEntityType et = 2;
}

message UpdateEntityRequest
{
    string json = 1;
    au.coaas.cqp.proto.ContextEntityType et = 2;
    string key = 3;
    int64 observedTime = 4;
}


message RegisterContextServiceRequest
{
    string json = 1;
}

message Chunk
{
    bytes data = 1;
    int32 total = 2;
    int32 index = 3;
}


message UpdateContextServiceStatusRequest
{
    string status = 1;
    string id = 2;
}

message ContextServiceRequest
{
    au.coaas.cqp.proto.ContextEntityType et = 1;
    repeated string params = 2;
}

message EntityTypeRequest
{
    string name = 1;
}

message SituationFunctionRequest
{
    string name = 1;
}

message CDQLLog
{
    string rawQuery = 1;
}


message Empty {}

message RegisterSituationRequest {
    string raw = 1;
    string title = 2;
    au.coaas.cqp.proto.SituationFunction sFunction = 3;
}


service SQEMService {
    rpc handleContextRequest (ContextRequest) returns (stream Chunk);
    rpc RegisterContextEntity (RegisterEntityRequest) returns (SQEMResponse);
    rpc UpdateContextEntity (UpdateEntityRequest) returns (SQEMResponse);
    rpc getAllEntityTypes (Empty) returns (SQEMResponse);
    rpc clearEntityType (EntityTypeRequest) returns (SQEMResponse);
    rpc removeEntityType (EntityTypeRequest) returns (SQEMResponse);
    rpc RegisterContextService (RegisterContextServiceRequest) returns (SQEMResponse);
    rpc updateContextServiceStatus (UpdateContextServiceStatusRequest) returns (SQEMResponse);
    rpc discoverMatchingServices (ContextServiceRequest) returns (SQEMResponse);
    rpc getAllContextServices (Empty) returns (SQEMResponse);
    rpc getAllSituations (Empty) returns (SQEMResponse);
    rpc getAllSubscriptions (Empty) returns (SQEMResponse);
    rpc registerSituationFunction (RegisterSituationRequest) returns (SQEMResponse);
    rpc findSituationByTitle (SituationFunctionRequest) returns (au.coaas.cqp.proto.SituationFunction);
    rpc getAllQueryLogs (Empty) returns (SQEMResponse);
    rpc logQuery (CDQLLog) returns (SQEMResponse);
}
