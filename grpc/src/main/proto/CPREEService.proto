syntax = "proto3";

option java_multiple_files = true;
option java_generic_services = true;

package au.coaas.cpree.proto;

import "SQEMService.proto";
import "CQPService.proto";

message Empty {}

message CPREEResponse {
  string status = 1;
  string body = 2;
}

message ContextQueryPlan {
  string parseTree = 1;
}

message CPMonitor {
  string contextID = 1;
  au.coaas.cqp.proto.ContextEntity contextEntity = 2;
  bool  delete = 3;
}

message CacheSelectionRequest {
  string context = 1;
  string contextLevel = 2;
  string sla = 3;
  au.coaas.sqem.proto.CacheLookUp reference = 4;
  double complexity = 5;
  repeated string attributes = 6;
  string hashKey = 7;
  au.coaas.sqem.proto.SituationLookUp situReference = 8;
}

message ProactiveRefreshRequest {
    au.coaas.sqem.proto.CacheLookUp reference = 1;
    double fthreh = 2;
    double resiLifetime = 3;
    double lifetime = 4;
    string hashKey = 5;
    string refreshPolicy = 6;
    double samplingInterval = 7;
    au.coaas.cqp.proto.ContextEntityType et = 8;
}

message ContextRefreshRequest {
  au.coaas.sqem.proto.CacheRefreshRequest request = 1;
  string refreshPolicy = 2;
  repeated string attributes = 3;
  string hashKey = 4;
  double complexity = 5;
}

message SimpleContainer {
  repeated string hashKeys = 1;
  uint64 retLatMilis = 2;
  double freshness = 3;
  string status = 4;
  string refPolicy = 5;
  string contextService = 6;
}

message LearnedWeights {
  double threshold = 1;
  double kappa = 2;
  double mu = 3;
  double pi = 4;
  double delta = 5;
  double row = 6;
}

message RetrievalEfficiency {
  double efficiecy = 1;
  double expMR = 2;
  int32 type = 3;
  double cacheCost = 4;
  double redCost = 5;
  double expPrd = 6;
}

message Lookup {
  string contextId = 1;
}

service CPREEService {
  rpc classifyQuery (ContextQueryPlan) returns (CPREEResponse);
  rpc evaluateAndCacheContext (CacheSelectionRequest) returns (CPREEResponse);
  rpc refreshContext (ContextRefreshRequest) returns (CPREEResponse);
  rpc updateWeights (LearnedWeights) returns (Empty);
  rpc stopRefreshing (Lookup) returns (Empty);
  rpc modifyCPMonitor (CPMonitor) returns (Empty);
}

