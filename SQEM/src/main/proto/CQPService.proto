
syntax = "proto3";

option java_multiple_files = true;
option java_generic_services = true;

package au.coaas.cqp.proto;

message ListOfString {
   repeated string value = 1;
}

message ListOfContextEntities {
    repeated ContextEntity value = 1;
}

message CDQLQuery {
    
    map<string, ListOfString> warnings = 1;
    
    map<string, ListOfString> errors = 2;
    
    CDQLType queryType = 3;
    
    map<string, string> nameSpaces = 4;
    
    CDQLSelect select = 5;
    
    CDQLWhen when = 6;
    
    CDQLRepeat repeat = 7;
    
    CDQLDefine define = 8;
    
    CDQLConfig config = 9;
    
    CDQLCallback callback = 10;
    
    map<int32, ListOfString> executionPlan = 11;
}

enum CDQLType {
    UNKNOWN_CDQL_TYPE = 0;
    PUSH_BASED = 1;
    PULL_BASED = 2;
    SITUATION_DEF = 3;
    QUERY = 4;
}

message ContextAttribute {
    string entityName = 1;
    string attributeName = 2;
    string prefix = 3;
    bool isComplexAttribute = 4;
}

message ListOfContextAttribute {
    repeated ContextAttribute value = 1;
}

enum OperandType {
    UNKNOWN_OPERAND_TYPE = 0;
    CONTEXT_VALUE_STRING = 1;
    CONTEXT_VALUE_NUMBER = 2;
    CONTEXT_VALUE_JSON = 3;
    CONTEXT_ATTRIBUTE = 4;
    CONTEXT_ENTITY = 5;
    FUNCTION_CALL = 6;
}

message Operand {
    OperandType type = 1;
    
    ContextAttribute contextAttribute = 2;

    FunctionCall functioncall = 3;

    ContextEntity contextEntity = 5;

    string stringValue = 4;
}

message FunctionCall {
    string functionName = 1;
    
    repeated Operand arguments = 2;
    
    repeated string subItems = 3;
}

message CDQLSelect {    
    map<string, ListOfContextAttribute> selectAttrs = 1;
    
    repeated FunctionCall selectFunctions = 2;   
    
    
}

message CDQLWhen{
    bool isLifeTime = 1;
    
    Condition condition = 2;
    
    int64 time = 3;
}

message Condition{
    repeated string contextAttribiutes = 1;
    
    repeated CdqlConditionToken RPNCondition = 2;
    
    map<string,ListOfString> dependency = 3;
}

enum CdqlConditionTokenType {
    UNKNOWN_CONDITION_TYPE = 0;
    Operator = 1;
    Constant = 2;
    Function = 3;
    Attribute = 4;
    Expression = 5;
    Entity = 6;
}

enum CdqlConstantConditionTokenType {
    UNKNOWN_CONSTANT_TYPE = 0;
    Numeric = 1;
    String = 2;
    Json = 3;
    Array = 4;
}


message CdqlConditionToken{
    string stringValue = 1;
        
    CdqlConditionTokenType type = 2;
    
    
    CdqlConstantConditionTokenType constantTokenType = 6;
    ContextAttribute contextAttribute = 3;
    ContextEntity contextEntity = 4;
    FunctionCall functionCall = 5;
    
}

message ContextEntityType {
    string type = 1;
    string vocabURI = 2;
}

message ContextEntity{
    ContextEntityType type = 1;
    
    string entityID = 2;
    
    Condition condition = 3;
    
    map<string, string> contextAttributes = 4;
}

enum TimeUnit {
    UNKNOWN_UNIT_TYPE = 0;
    NANO_SECOND = 1;
    MILLI_SECOND = 2;
    SECOND = 3;
    MINUTE = 4;
    HOUR = 5;
    DAY = 6;
    MONTH = 7;
    YEAR = 8;
} 

message CDQLRepeat {
    double interval = 1;
    
    TimeUnit unit = 2;
}
    
message CDQLDefine {
    repeated ContextEntity definedEntities = 1;
}
    
enum OutputStructureType{
    UNKNOWN_OUTPUT_TYPE = 0;
    JSON = 1;
    ODF = 2;
    XML = 3;
}

message OutputConfig{
    OutputStructureType outputStructure = 1;
}
    
message CDQLConfig {
    OutputConfig outputConfig = 1;
}
    
enum CallBackMethod {
    UNKNOWN_METHOD_TYPE = 0;
    FCM = 1;
    HTTPPOST = 2;
}

message CDQLCallback {
    CallBackMethod callbackMethod = 1;
    
    string httpURL = 2;

    string fcmTopic = 3;

    string fcmID = 4;

    string body = 5;

    map<string, string> headers = 6;

    string AuthorizationType = 7;

    string userName = 8;

    string password = 9;
}

message ParseRequest
{
    string cdql = 1;
}

service CQPService {
    rpc parse (ParseRequest) returns (CDQLQuery);
}